<%def name="render(x)">\
  NovaCompute${x}:
    Metadata:
      OpenStack::ImageBuilder::Elements:
      - nova-compute
      admin-password: unset
      glance:
        host:
          Fn::GetAtt:
          - notcompute
          - PrivateIp
      heat:
        access_key_id:
          Ref: Key
        refresh:
        - resource: NovaCompute
        secret_key:
          Fn::GetAtt:
          - Key
          - SecretAccessKey
        stack:
          name:
            Ref: AWS::StackName
          region:
            Ref: AWS::Region
      interfaces:
        control:
          Ref: NovaInterfaces
      keystone:
        host:
          Fn::GetAtt:
          - notcompute
          - PrivateIp
      neutron:
        host:
          Fn::GetAtt:
          - notcompute
          - PrivateIp
        ovs:
          bridge_mappings: ''
          enable_tunneling: 'True'
          local_ip: 0.0.0.0
          network_vlan_ranges: ''
          tenant_network_type: gre
        ovs_db:
          Fn::Join:
          - ''
          - - mysql://neutron:unset@
            - Fn::GetAtt:
              - notcompute
              - PrivateIp
            - /neutron
      nova:
        compute_driver:
          Ref: NovaComputeDriver
        db:
          Fn::Join:
          - ''
          - - mysql://nova:unset@
            - Fn::GetAtt:
              - notcompute
              - PrivateIp
            - /nova
        host:
          Fn::GetAtt:
          - notcompute
          - PrivateIp
      rabbit:
        host:
          Fn::GetAtt:
          - notcompute
          - PrivateIp
        password: guest
      service-password: unset
      swift:
        store_key: ''
        store_user: ''
    Properties:
      ImageId:
        Ref: NovaImage
      InstanceType:
        Ref: InstanceType
      KeyName:
        Ref: KeyName
      AvailabilityZone: nova::${x}
      UserData:
        Fn::Base64:
          |
          #!/bin/bash -v
          /opt/aws/bin/cfn-init
          # Setup the keystone:
          # FIXME: Add OS_USERNAME, OS_PASSWORD, OS_AUTH_URL, etc here with
          # valid credentials (config.nova_keystone... ?)
          #
          # FIXME: List just 'compute' resource classes here?
      % for rc in resource_classes:
        % for f in rc.flavors:
          nova-manage instance_type list compute.${f.name} &> /dev/null
          if [ $? == 1 ]; then
            nova-manage instance_type create compute.${f.name} 32768 16 320 0 0 0 # FIXME: Add f.cpus / etc here
          fi
        % endfor
      % endfor

    Type: AWS::EC2::Instance
</%def>\
